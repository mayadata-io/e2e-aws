#!/bin/bash
set -x

time="date"
current_time=$(eval $time)
job_id=$CI_JOB_ID
pipeline_id=$CI_PIPELINE_ID
releaseTag=$RELEASE_TAG
from_version=$FROM_VERSION
to_version=$RELEASE_TAG
csi_upgrade_imageTag=$CSI_UPGRADE_IMAGE_TAG

source ~/.profile

present_dir=$(pwd)
echo $present_dir

echo "Setting up test dependencies.."	
${utils_path}/setup_dependencies litmus-test	

bash script/utils/pooling jobname:upgrade-cstor-operator
bash script/utils/e2e-cr jobname:upgrade-cstor-csi jobphase:Waiting
bash script/utils/e2e-cr jobname:upgrade-cstor-csi jobphase:Running init_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" openebs_version:"$releaseTag"

run_id="cstor-csi";test_name=$(bash script/utils/generate_test_name testcase=cstor-cspc-csi-upgrade metadata=${run_id})
echo $test_name

git clone https://github.com/mayadata-io/litmus.git
cd litmus
echo "Running the litmus test.."

cp providers/openebs/cspc_csi_upgrade/run_litmus_test.yml upgrade-cstor.yml

sed -i -e '/name: CSPC_POOL_UPGRADE/{n;s/.*/            value: "true"/}' \
-e '/name: CSI_VOLUME_UPGRADE/{n;s/.*/            value: "true"/}' \
-e '/name: FROM_VERSION/{n;s/.*/            value: '"'$from_version'"'/}' \
-e '/name: TO_VERSION/{n;s/.*/            value: '"'$to_version'"'/}' \
-e '/name: UPGRADE_IMAGE_TAG/{n;s/.*/            value: '"'$csi_upgrade_imageTag'"'/}' upgrade-cstor.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"$run_id"'\
' upgrade-cstor.yml 

cat upgrade-cstor.yml

bash ../script/utils/litmus_job_runner label='app:cstor-csi-upgrade' job=upgrade-cstor.yml

echo "Dumping state of cluster post job run"; echo ""
bash ../script/utils/dump_cluster_state;

cd ..
bash script/utils/event_updater jobname:upgrade-cstor-csi $test_name jobid:"$job_id" pipelineid:"$pipeline_id"
#################
## GET RESULT  ##
#################
rc_val=$(echo $?)
kubectl get pods -n openebs -o yaml | grep image | grep -v imageID | grep quay

## Check the test status & result from the litmus result custom resource
source ~/.profile
testResult=$(kubectl get litmusresult ${test_name} --no-headers -o custom-columns=:spec.testStatus.result)

current_time=$(eval $time)
bash script/utils/e2e-cr jobname:upgrade-cstor-csi jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" openebs_version:"$releaseTag" test_result:$testResult

if [ "$rc_val" != "0" ]; then
exit 1;
fi
