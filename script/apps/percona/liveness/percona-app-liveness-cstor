#!/bin/bash
set -x

#################
## ENVIRONMENT ##
#################

## https://github.com/openebs/litmus/blob/master/apps/percona/liveness/test_vars.yml
run_id="cstor"; test_name=$(${utils_path}/generate_test_name testcase=percona-liveness metadata=${run_id})
 
#########################
## INFRA DEPENDENCIES  ##
#########################

## Sets up the artifact dependencies & also set env LITMUS_NODE
observer_node=$(${utils_path}/setup_dependencies litmus-test)

## Clone the litmus repo, navigate to litmus root 
git clone https://github.com/openebs/litmus.git
cd litmus

#######################
## JOB DEPENDENCIES  ##
#######################
# Define Cmd to get job name

jobNameCmd="kubectl get jobs -n litmus --no-headers -o jsonpath='{.items[?(@.metadata.labels.liveness==\"percona-liveness-cstor\")].metadata.name}'"
job_name=$(eval ${jobNameCmd}); rc=$?
if [[ $rc -eq 0 && ! -z $job_name ]]; then
   echo "Delete the stale liveness job"; echo ""
   kubectl delete job $job_name -n litmus
fi
############################
## LITMUS PRECONDITIONING ##
############################

## TODO: Better way/logic to replace job ENV (SC, PVC, LABEL, NS) based on run instance intent (CLI) 
## TODO: Add logic to add ENV for run_instance_metadata/RunID

: << EOF
  ------------------------------------------------------------------------------------
 | specAttribute        | kind	   | jiva       	| cStor-sparse  	       |
  ------------------------------------------------------------------------------------
 | litmusJobLabel       | jobSpec  | percona-liveness   | percona-liveness-cstor       |
 | appNamespace         | env	   | app-percona-ns     | percona-cstor                |
 | runID		| env(add) | 	-		| cstor 
  ------------------------------------------------------------------------------------
EOF

cp apps/percona/liveness/run_litmus_test.yml run_test.yml

sed -i -e 's/liveness: percona-liveness/liveness: percona-liveness-cstor/g' \
-e 's/value: percona-mysql.app-percona-ns.svc.cluster.local/value: percona-mysql.percona-cstor.svc.cluster.local/g' run_test.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"${run_id}"'\
' run_test.yml

## Note: variable substitution in sed needs double-quotes. Usage of "|" to avoid escaping "/"
sed -i -e "s|#nodeSelector|nodeSelector|g" \
-e "s|#  kubernetes.io/hostname:|  kubernetes.io/hostname: ${observer_node}|g" run_test.yml

#################
## RUNNER MAIN ##
#################

echo "Running the litmus test.."
# Unlike other tests, liveness gitlab runners need to exit immediately after verifying "liveness
# launch success" via CR. This calls for us to perform a one-time confirmation of liveness pod.
${utils_path}/litmus_job_runner label='liveness:percona-liveness-cstor' jobfile=run_test.yml action='run_and_wait_on_result_cr' cr=${test_name}
${utils_path}/task_delimiter;

echo "Dumping state of cluster post job run"; echo ""
${utils_path}/dump_cluster_state;
${utils_path}/task_delimiter;

#################
## GET RESULT  ##
#################

## Check the test status & result from the litmus result custom resource
${utils_path}/get_litmus_result ${test_name}

