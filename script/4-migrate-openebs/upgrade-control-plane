#!/bin/bash
set -x

source ~/.profile

time="date"
current_time=$(eval $time)
job_id=$CI_JOB_ID
pipeline_id=$CI_PIPELINE_ID
releaseTag=$RELEASE_TAG
commit_id=$COMMIT_ID
rc_tag=$RC_TAG

present_dir=$(pwd)
echo $present_dir

echo "Setting up test dependencies.."	
${utils_path}/setup_dependencies e2e-test

# Applying e2e-CRD
echo "***Applying e2e-crd***********"
kubectl apply -f script/utils/e2e-crd.yml

kubectl get pods -n openebs -o yaml | grep image | grep -v imageID | grep quay

bash script/utils/e2e-cr jobname:upgrade-control-plane jobphase:Waiting
bash script/utils/e2e-cr jobname:upgrade-control-plane jobphase:Running init_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" openebs_version:"$releaseTag"
bash script/utils/e2e-cr jobname:cstor-operator jobphase:Waiting
bash script/utils/e2e-cr jobname:migrate-cstor-pool jobphase:Waiting
bash script/utils/e2e-cr jobname:migrate-cstor-volume jobphase:Waiting

run_id="upgrade";test_name=$(bash script/utils/generate_test_name testcase=openebs-provision metadata=${run_id})
echo $test_name

git clone https://github.com/openebs/upgrade.git
cd upgrade/e2e-tests
echo "Running the e2e test.."

cp experiments/openebs-provision/run_e2e_test.yml upgrade_control_plane.yml

sed -i -e 's/imagePullPolicy: Always/imagePullPolicy: IfNotPresent/g' \
-e 's/provider: openebs-runner/provider: openebs-runner-upgrade/g' \
-e '/name: OPENEBS_VERSION/{n;s/.*/            value: '"'$releaseTag'"'/}' \
-e '/name: RC_TAG/{n;s/.*/            value: '"'$rc_tag'"'/}' \
-e '/name: COMMIT_ID/{n;s/.*/            value: '"'$commit_id'"'/}' upgrade_control_plane.yml

sed -i '/command:/i \
          - name: RUN_ID\
            value: '"$run_id"'\
' upgrade_control_plane.yml

cat upgrade_control_plane.yml

bash ../../script/utils/e2e_job_runner label='provider:openebs-runner-upgrade' job=upgrade_control_plane.yml

echo "Dumping state of cluster post job run"; echo ""
bash ../../script/utils/dump_cluster_state;

cd ../..
bash script/utils/event_updater jobname:upgrade-control-plane $test_name jobid:"$job_id" pipelineid:"$pipeline_id"
#################
## GET RESULT  ##
#################
rc_val=$(echo $?)

## Check the test status & result from the e2e result custom resource
source ~/.profile
testResult=$(kubectl get e2eresult ${test_name} --no-headers -o custom-columns=:spec.testStatus.result)

current_time=$(eval $time)
bash script/utils/e2e-cr jobname:upgrade-control-plane jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" openebs_version:"$releaseTag" test_result:$testResult

if [ "$rc_val" != "0" ]; then
exit 1;
fi
